<?php
/**
 * Employee
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Apideck\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Apideck
 *
 * The Apideck OpenAPI Spec: SDK Optimized
 *
 * The version of the OpenAPI document: 10.1.3
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Apideck\Client\Model;

use \ArrayAccess;
use \Apideck\Client\ObjectSerializer;

/**
 * Employee Class Doc Comment
 *
 * @category Class
 * @package  Apideck\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Employee implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Employee';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'first_name' => 'string',
        'last_name' => 'string',
        'middle_name' => 'string',
        'display_name' => 'string',
        'preferred_name' => 'string',
        'initials' => 'string',
        'salutation' => 'string',
        'title' => 'string',
        'marital_status' => 'string',
        'partner' => '\Apideck\Client\Model\Person',
        'division' => 'string',
        'division_id' => 'string',
        'department' => 'string',
        'department_id' => 'string',
        'department_name' => 'string',
        'team' => '\Apideck\Client\Model\Team',
        'company_id' => 'string',
        'company_name' => 'string',
        'employment_start_date' => 'string',
        'employment_end_date' => 'string',
        'leaving_reason' => 'string',
        'employee_number' => 'string',
        'employment_status' => '\Apideck\Client\Model\EmploymentStatus',
        'employment_role' => '\Apideck\Client\Model\EmployeeEmploymentRole',
        'ethnicity' => 'string',
        'manager' => '\Apideck\Client\Model\EmployeeManager',
        'direct_reports' => 'string[]',
        'social_security_number' => 'string',
        'birthday' => '\DateTime',
        'deceased_on' => '\DateTime',
        'country_of_birth' => 'string',
        'description' => 'string',
        'gender' => '\Apideck\Client\Model\Gender',
        'pronouns' => 'string',
        'preferred_language' => 'string',
        'languages' => 'string[]',
        'nationalities' => 'string[]',
        'photo_url' => 'string',
        'timezone' => 'string',
        'source' => 'string',
        'source_id' => 'string',
        'record_url' => 'string',
        'jobs' => '\Apideck\Client\Model\EmployeeJob[]',
        'compensations' => '\Apideck\Client\Model\EmployeeCompensation[]',
        'works_remote' => 'bool',
        'addresses' => '\Apideck\Client\Model\Address[]',
        'phone_numbers' => '\Apideck\Client\Model\PhoneNumber[]',
        'emails' => '\Apideck\Client\Model\Email[]',
        'custom_fields' => '\Apideck\Client\Model\CustomField[]',
        'social_links' => '\Apideck\Client\Model\SocialLink[]',
        'bank_accounts' => '\Apideck\Client\Model\BankAccount[]',
        'tax_code' => 'string',
        'tax_id' => 'string',
        'dietary_preference' => 'string',
        'food_allergies' => 'string[]',
        'probation_period' => '\Apideck\Client\Model\ProbationPeriod',
        'tags' => 'string[]',
        'custom_mappings' => 'object',
        'row_version' => 'string',
        'deleted' => 'bool',
        'updated_by' => 'string',
        'created_by' => 'string',
        'updated_at' => '\DateTime',
        'created_at' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'first_name' => null,
        'last_name' => null,
        'middle_name' => null,
        'display_name' => null,
        'preferred_name' => null,
        'initials' => null,
        'salutation' => null,
        'title' => null,
        'marital_status' => null,
        'partner' => null,
        'division' => null,
        'division_id' => null,
        'department' => null,
        'department_id' => null,
        'department_name' => null,
        'team' => null,
        'company_id' => null,
        'company_name' => null,
        'employment_start_date' => null,
        'employment_end_date' => null,
        'leaving_reason' => null,
        'employee_number' => null,
        'employment_status' => null,
        'employment_role' => null,
        'ethnicity' => null,
        'manager' => null,
        'direct_reports' => null,
        'social_security_number' => null,
        'birthday' => 'date',
        'deceased_on' => 'date',
        'country_of_birth' => null,
        'description' => null,
        'gender' => null,
        'pronouns' => null,
        'preferred_language' => null,
        'languages' => null,
        'nationalities' => null,
        'photo_url' => null,
        'timezone' => null,
        'source' => null,
        'source_id' => null,
        'record_url' => null,
        'jobs' => null,
        'compensations' => null,
        'works_remote' => null,
        'addresses' => null,
        'phone_numbers' => null,
        'emails' => null,
        'custom_fields' => null,
        'social_links' => null,
        'bank_accounts' => null,
        'tax_code' => null,
        'tax_id' => null,
        'dietary_preference' => null,
        'food_allergies' => null,
        'probation_period' => null,
        'tags' => null,
        'custom_mappings' => null,
        'row_version' => null,
        'deleted' => null,
        'updated_by' => null,
        'created_by' => null,
        'updated_at' => 'date-time',
        'created_at' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'first_name' => 'first_name',
        'last_name' => 'last_name',
        'middle_name' => 'middle_name',
        'display_name' => 'display_name',
        'preferred_name' => 'preferred_name',
        'initials' => 'initials',
        'salutation' => 'salutation',
        'title' => 'title',
        'marital_status' => 'marital_status',
        'partner' => 'partner',
        'division' => 'division',
        'division_id' => 'division_id',
        'department' => 'department',
        'department_id' => 'department_id',
        'department_name' => 'department_name',
        'team' => 'team',
        'company_id' => 'company_id',
        'company_name' => 'company_name',
        'employment_start_date' => 'employment_start_date',
        'employment_end_date' => 'employment_end_date',
        'leaving_reason' => 'leaving_reason',
        'employee_number' => 'employee_number',
        'employment_status' => 'employment_status',
        'employment_role' => 'employment_role',
        'ethnicity' => 'ethnicity',
        'manager' => 'manager',
        'direct_reports' => 'direct_reports',
        'social_security_number' => 'social_security_number',
        'birthday' => 'birthday',
        'deceased_on' => 'deceased_on',
        'country_of_birth' => 'country_of_birth',
        'description' => 'description',
        'gender' => 'gender',
        'pronouns' => 'pronouns',
        'preferred_language' => 'preferred_language',
        'languages' => 'languages',
        'nationalities' => 'nationalities',
        'photo_url' => 'photo_url',
        'timezone' => 'timezone',
        'source' => 'source',
        'source_id' => 'source_id',
        'record_url' => 'record_url',
        'jobs' => 'jobs',
        'compensations' => 'compensations',
        'works_remote' => 'works_remote',
        'addresses' => 'addresses',
        'phone_numbers' => 'phone_numbers',
        'emails' => 'emails',
        'custom_fields' => 'custom_fields',
        'social_links' => 'social_links',
        'bank_accounts' => 'bank_accounts',
        'tax_code' => 'tax_code',
        'tax_id' => 'tax_id',
        'dietary_preference' => 'dietary_preference',
        'food_allergies' => 'food_allergies',
        'probation_period' => 'probation_period',
        'tags' => 'tags',
        'custom_mappings' => 'custom_mappings',
        'row_version' => 'row_version',
        'deleted' => 'deleted',
        'updated_by' => 'updated_by',
        'created_by' => 'created_by',
        'updated_at' => 'updated_at',
        'created_at' => 'created_at'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'middle_name' => 'setMiddleName',
        'display_name' => 'setDisplayName',
        'preferred_name' => 'setPreferredName',
        'initials' => 'setInitials',
        'salutation' => 'setSalutation',
        'title' => 'setTitle',
        'marital_status' => 'setMaritalStatus',
        'partner' => 'setPartner',
        'division' => 'setDivision',
        'division_id' => 'setDivisionId',
        'department' => 'setDepartment',
        'department_id' => 'setDepartmentId',
        'department_name' => 'setDepartmentName',
        'team' => 'setTeam',
        'company_id' => 'setCompanyId',
        'company_name' => 'setCompanyName',
        'employment_start_date' => 'setEmploymentStartDate',
        'employment_end_date' => 'setEmploymentEndDate',
        'leaving_reason' => 'setLeavingReason',
        'employee_number' => 'setEmployeeNumber',
        'employment_status' => 'setEmploymentStatus',
        'employment_role' => 'setEmploymentRole',
        'ethnicity' => 'setEthnicity',
        'manager' => 'setManager',
        'direct_reports' => 'setDirectReports',
        'social_security_number' => 'setSocialSecurityNumber',
        'birthday' => 'setBirthday',
        'deceased_on' => 'setDeceasedOn',
        'country_of_birth' => 'setCountryOfBirth',
        'description' => 'setDescription',
        'gender' => 'setGender',
        'pronouns' => 'setPronouns',
        'preferred_language' => 'setPreferredLanguage',
        'languages' => 'setLanguages',
        'nationalities' => 'setNationalities',
        'photo_url' => 'setPhotoUrl',
        'timezone' => 'setTimezone',
        'source' => 'setSource',
        'source_id' => 'setSourceId',
        'record_url' => 'setRecordUrl',
        'jobs' => 'setJobs',
        'compensations' => 'setCompensations',
        'works_remote' => 'setWorksRemote',
        'addresses' => 'setAddresses',
        'phone_numbers' => 'setPhoneNumbers',
        'emails' => 'setEmails',
        'custom_fields' => 'setCustomFields',
        'social_links' => 'setSocialLinks',
        'bank_accounts' => 'setBankAccounts',
        'tax_code' => 'setTaxCode',
        'tax_id' => 'setTaxId',
        'dietary_preference' => 'setDietaryPreference',
        'food_allergies' => 'setFoodAllergies',
        'probation_period' => 'setProbationPeriod',
        'tags' => 'setTags',
        'custom_mappings' => 'setCustomMappings',
        'row_version' => 'setRowVersion',
        'deleted' => 'setDeleted',
        'updated_by' => 'setUpdatedBy',
        'created_by' => 'setCreatedBy',
        'updated_at' => 'setUpdatedAt',
        'created_at' => 'setCreatedAt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'middle_name' => 'getMiddleName',
        'display_name' => 'getDisplayName',
        'preferred_name' => 'getPreferredName',
        'initials' => 'getInitials',
        'salutation' => 'getSalutation',
        'title' => 'getTitle',
        'marital_status' => 'getMaritalStatus',
        'partner' => 'getPartner',
        'division' => 'getDivision',
        'division_id' => 'getDivisionId',
        'department' => 'getDepartment',
        'department_id' => 'getDepartmentId',
        'department_name' => 'getDepartmentName',
        'team' => 'getTeam',
        'company_id' => 'getCompanyId',
        'company_name' => 'getCompanyName',
        'employment_start_date' => 'getEmploymentStartDate',
        'employment_end_date' => 'getEmploymentEndDate',
        'leaving_reason' => 'getLeavingReason',
        'employee_number' => 'getEmployeeNumber',
        'employment_status' => 'getEmploymentStatus',
        'employment_role' => 'getEmploymentRole',
        'ethnicity' => 'getEthnicity',
        'manager' => 'getManager',
        'direct_reports' => 'getDirectReports',
        'social_security_number' => 'getSocialSecurityNumber',
        'birthday' => 'getBirthday',
        'deceased_on' => 'getDeceasedOn',
        'country_of_birth' => 'getCountryOfBirth',
        'description' => 'getDescription',
        'gender' => 'getGender',
        'pronouns' => 'getPronouns',
        'preferred_language' => 'getPreferredLanguage',
        'languages' => 'getLanguages',
        'nationalities' => 'getNationalities',
        'photo_url' => 'getPhotoUrl',
        'timezone' => 'getTimezone',
        'source' => 'getSource',
        'source_id' => 'getSourceId',
        'record_url' => 'getRecordUrl',
        'jobs' => 'getJobs',
        'compensations' => 'getCompensations',
        'works_remote' => 'getWorksRemote',
        'addresses' => 'getAddresses',
        'phone_numbers' => 'getPhoneNumbers',
        'emails' => 'getEmails',
        'custom_fields' => 'getCustomFields',
        'social_links' => 'getSocialLinks',
        'bank_accounts' => 'getBankAccounts',
        'tax_code' => 'getTaxCode',
        'tax_id' => 'getTaxId',
        'dietary_preference' => 'getDietaryPreference',
        'food_allergies' => 'getFoodAllergies',
        'probation_period' => 'getProbationPeriod',
        'tags' => 'getTags',
        'custom_mappings' => 'getCustomMappings',
        'row_version' => 'getRowVersion',
        'deleted' => 'getDeleted',
        'updated_by' => 'getUpdatedBy',
        'created_by' => 'getCreatedBy',
        'updated_at' => 'getUpdatedAt',
        'created_at' => 'getCreatedAt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const LEAVING_REASON_DISMISSED = 'dismissed';
    const LEAVING_REASON_RESIGNED = 'resigned';
    const LEAVING_REASON_REDUNDANCY = 'redundancy';
    const LEAVING_REASON_OTHER = 'other';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getLeavingReasonAllowableValues()
    {
        return [
            self::LEAVING_REASON_DISMISSED,
            self::LEAVING_REASON_RESIGNED,
            self::LEAVING_REASON_REDUNDANCY,
            self::LEAVING_REASON_OTHER,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['first_name'] = $data['first_name'] ?? null;
        $this->container['last_name'] = $data['last_name'] ?? null;
        $this->container['middle_name'] = $data['middle_name'] ?? null;
        $this->container['display_name'] = $data['display_name'] ?? null;
        $this->container['preferred_name'] = $data['preferred_name'] ?? null;
        $this->container['initials'] = $data['initials'] ?? null;
        $this->container['salutation'] = $data['salutation'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['marital_status'] = $data['marital_status'] ?? null;
        $this->container['partner'] = $data['partner'] ?? null;
        $this->container['division'] = $data['division'] ?? null;
        $this->container['division_id'] = $data['division_id'] ?? null;
        $this->container['department'] = $data['department'] ?? null;
        $this->container['department_id'] = $data['department_id'] ?? null;
        $this->container['department_name'] = $data['department_name'] ?? null;
        $this->container['team'] = $data['team'] ?? null;
        $this->container['company_id'] = $data['company_id'] ?? null;
        $this->container['company_name'] = $data['company_name'] ?? null;
        $this->container['employment_start_date'] = $data['employment_start_date'] ?? null;
        $this->container['employment_end_date'] = $data['employment_end_date'] ?? null;
        $this->container['leaving_reason'] = $data['leaving_reason'] ?? null;
        $this->container['employee_number'] = $data['employee_number'] ?? null;
        $this->container['employment_status'] = $data['employment_status'] ?? null;
        $this->container['employment_role'] = $data['employment_role'] ?? null;
        $this->container['ethnicity'] = $data['ethnicity'] ?? null;
        $this->container['manager'] = $data['manager'] ?? null;
        $this->container['direct_reports'] = $data['direct_reports'] ?? null;
        $this->container['social_security_number'] = $data['social_security_number'] ?? null;
        $this->container['birthday'] = $data['birthday'] ?? null;
        $this->container['deceased_on'] = $data['deceased_on'] ?? null;
        $this->container['country_of_birth'] = $data['country_of_birth'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['gender'] = $data['gender'] ?? null;
        $this->container['pronouns'] = $data['pronouns'] ?? null;
        $this->container['preferred_language'] = $data['preferred_language'] ?? null;
        $this->container['languages'] = $data['languages'] ?? null;
        $this->container['nationalities'] = $data['nationalities'] ?? null;
        $this->container['photo_url'] = $data['photo_url'] ?? null;
        $this->container['timezone'] = $data['timezone'] ?? null;
        $this->container['source'] = $data['source'] ?? null;
        $this->container['source_id'] = $data['source_id'] ?? null;
        $this->container['record_url'] = $data['record_url'] ?? null;
        $this->container['jobs'] = $data['jobs'] ?? null;
        $this->container['compensations'] = $data['compensations'] ?? null;
        $this->container['works_remote'] = $data['works_remote'] ?? null;
        $this->container['addresses'] = $data['addresses'] ?? null;
        $this->container['phone_numbers'] = $data['phone_numbers'] ?? null;
        $this->container['emails'] = $data['emails'] ?? null;
        $this->container['custom_fields'] = $data['custom_fields'] ?? null;
        $this->container['social_links'] = $data['social_links'] ?? null;
        $this->container['bank_accounts'] = $data['bank_accounts'] ?? null;
        $this->container['tax_code'] = $data['tax_code'] ?? null;
        $this->container['tax_id'] = $data['tax_id'] ?? null;
        $this->container['dietary_preference'] = $data['dietary_preference'] ?? null;
        $this->container['food_allergies'] = $data['food_allergies'] ?? null;
        $this->container['probation_period'] = $data['probation_period'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['custom_mappings'] = $data['custom_mappings'] ?? null;
        $this->container['row_version'] = $data['row_version'] ?? null;
        $this->container['deleted'] = $data['deleted'] ?? null;
        $this->container['updated_by'] = $data['updated_by'] ?? null;
        $this->container['created_by'] = $data['created_by'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        $allowedValues = $this->getLeavingReasonAllowableValues();
        if (!is_null($this->container['leaving_reason']) && !in_array($this->container['leaving_reason'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'leaving_reason', must be one of '%s'",
                $this->container['leaving_reason'],
                implode("', '", $allowedValues)
            );
        }

        if (!is_null($this->container['country_of_birth']) && (mb_strlen($this->container['country_of_birth']) > 2)) {
            $invalidProperties[] = "invalid value for 'country_of_birth', the character length must be smaller than or equal to 2.";
        }

        if (!is_null($this->container['country_of_birth']) && (mb_strlen($this->container['country_of_birth']) < 2)) {
            $invalidProperties[] = "invalid value for 'country_of_birth', the character length must be bigger than or equal to 2.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id A unique identifier for an object.
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string|null $first_name The first name of the person.
     *
     * @return self
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string|null $last_name The last name of the person.
     *
     * @return self
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets middle_name
     *
     * @return string|null
     */
    public function getMiddleName()
    {
        return $this->container['middle_name'];
    }

    /**
     * Sets middle_name
     *
     * @param string|null $middle_name Middle name of the person.
     *
     * @return self
     */
    public function setMiddleName($middle_name)
    {
        $this->container['middle_name'] = $middle_name;

        return $this;
    }

    /**
     * Gets display_name
     *
     * @return string|null
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string|null $display_name The name used to display the employee, often a combination of their first and last names.
     *
     * @return self
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets preferred_name
     *
     * @return string|null
     */
    public function getPreferredName()
    {
        return $this->container['preferred_name'];
    }

    /**
     * Sets preferred_name
     *
     * @param string|null $preferred_name The name the employee prefers to be addressed by, which may be different from their legal name.
     *
     * @return self
     */
    public function setPreferredName($preferred_name)
    {
        $this->container['preferred_name'] = $preferred_name;

        return $this;
    }

    /**
     * Gets initials
     *
     * @return string|null
     */
    public function getInitials()
    {
        return $this->container['initials'];
    }

    /**
     * Sets initials
     *
     * @param string|null $initials The initials of the person, usually derived from their first, middle, and last names.
     *
     * @return self
     */
    public function setInitials($initials)
    {
        $this->container['initials'] = $initials;

        return $this;
    }

    /**
     * Gets salutation
     *
     * @return string|null
     */
    public function getSalutation()
    {
        return $this->container['salutation'];
    }

    /**
     * Sets salutation
     *
     * @param string|null $salutation A formal salutation for the person. For example, 'Mr', 'Mrs'
     *
     * @return self
     */
    public function setSalutation($salutation)
    {
        $this->container['salutation'] = $salutation;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title The job title of the person.
     *
     * @return self
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets marital_status
     *
     * @return string|null
     */
    public function getMaritalStatus()
    {
        return $this->container['marital_status'];
    }

    /**
     * Sets marital_status
     *
     * @param string|null $marital_status The marital status of the employee.
     *
     * @return self
     */
    public function setMaritalStatus($marital_status)
    {
        $this->container['marital_status'] = $marital_status;

        return $this;
    }

    /**
     * Gets partner
     *
     * @return \Apideck\Client\Model\Person|null
     */
    public function getPartner()
    {
        return $this->container['partner'];
    }

    /**
     * Sets partner
     *
     * @param \Apideck\Client\Model\Person|null $partner partner
     *
     * @return self
     */
    public function setPartner($partner)
    {
        $this->container['partner'] = $partner;

        return $this;
    }

    /**
     * Gets division
     *
     * @return string|null
     */
    public function getDivision()
    {
        return $this->container['division'];
    }

    /**
     * Sets division
     *
     * @param string|null $division The division the person is currently in. Usually a collection of departments or teams or regions.
     *
     * @return self
     */
    public function setDivision($division)
    {
        $this->container['division'] = $division;

        return $this;
    }

    /**
     * Gets division_id
     *
     * @return string|null
     */
    public function getDivisionId()
    {
        return $this->container['division_id'];
    }

    /**
     * Sets division_id
     *
     * @param string|null $division_id Unique identifier of the division this employee belongs to.
     *
     * @return self
     */
    public function setDivisionId($division_id)
    {
        $this->container['division_id'] = $division_id;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string|null
     * @deprecated
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string|null $department The department the person is currently in. [Deprecated](https://developers.apideck.com/changelog) in favor of the dedicated department_id and department_name field.
     *
     * @return self
     * @deprecated
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets department_id
     *
     * @return string|null
     */
    public function getDepartmentId()
    {
        return $this->container['department_id'];
    }

    /**
     * Sets department_id
     *
     * @param string|null $department_id Unique identifier of the department ID this employee belongs to.
     *
     * @return self
     */
    public function setDepartmentId($department_id)
    {
        $this->container['department_id'] = $department_id;

        return $this;
    }

    /**
     * Gets department_name
     *
     * @return string|null
     */
    public function getDepartmentName()
    {
        return $this->container['department_name'];
    }

    /**
     * Sets department_name
     *
     * @param string|null $department_name Name of the department this employee belongs to.
     *
     * @return self
     */
    public function setDepartmentName($department_name)
    {
        $this->container['department_name'] = $department_name;

        return $this;
    }

    /**
     * Gets team
     *
     * @return \Apideck\Client\Model\Team|null
     */
    public function getTeam()
    {
        return $this->container['team'];
    }

    /**
     * Sets team
     *
     * @param \Apideck\Client\Model\Team|null $team team
     *
     * @return self
     */
    public function setTeam($team)
    {
        $this->container['team'] = $team;

        return $this;
    }

    /**
     * Gets company_id
     *
     * @return string|null
     */
    public function getCompanyId()
    {
        return $this->container['company_id'];
    }

    /**
     * Sets company_id
     *
     * @param string|null $company_id The unique identifier of the company.
     *
     * @return self
     */
    public function setCompanyId($company_id)
    {
        $this->container['company_id'] = $company_id;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string|null
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string|null $company_name The name of the company.
     *
     * @return self
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets employment_start_date
     *
     * @return string|null
     */
    public function getEmploymentStartDate()
    {
        return $this->container['employment_start_date'];
    }

    /**
     * Sets employment_start_date
     *
     * @param string|null $employment_start_date A Start Date is the date that the employee started working at the company
     *
     * @return self
     */
    public function setEmploymentStartDate($employment_start_date)
    {
        $this->container['employment_start_date'] = $employment_start_date;

        return $this;
    }

    /**
     * Gets employment_end_date
     *
     * @return string|null
     */
    public function getEmploymentEndDate()
    {
        return $this->container['employment_end_date'];
    }

    /**
     * Sets employment_end_date
     *
     * @param string|null $employment_end_date An End Date is the date that the employee ended working at the company
     *
     * @return self
     */
    public function setEmploymentEndDate($employment_end_date)
    {
        $this->container['employment_end_date'] = $employment_end_date;

        return $this;
    }

    /**
     * Gets leaving_reason
     *
     * @return string|null
     */
    public function getLeavingReason()
    {
        return $this->container['leaving_reason'];
    }

    /**
     * Sets leaving_reason
     *
     * @param string|null $leaving_reason The reason because the employment ended.
     *
     * @return self
     */
    public function setLeavingReason($leaving_reason)
    {
        $allowedValues = $this->getLeavingReasonAllowableValues();
        if (!is_null($leaving_reason) && !in_array($leaving_reason, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'leaving_reason', must be one of '%s'",
                    $leaving_reason,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['leaving_reason'] = $leaving_reason;

        return $this;
    }

    /**
     * Gets employee_number
     *
     * @return string|null
     */
    public function getEmployeeNumber()
    {
        return $this->container['employee_number'];
    }

    /**
     * Sets employee_number
     *
     * @param string|null $employee_number An Employee Number, Employee ID or Employee Code, is a unique number that has been assigned to each individual staff member within a company.
     *
     * @return self
     */
    public function setEmployeeNumber($employee_number)
    {
        $this->container['employee_number'] = $employee_number;

        return $this;
    }

    /**
     * Gets employment_status
     *
     * @return \Apideck\Client\Model\EmploymentStatus|null
     */
    public function getEmploymentStatus()
    {
        return $this->container['employment_status'];
    }

    /**
     * Sets employment_status
     *
     * @param \Apideck\Client\Model\EmploymentStatus|null $employment_status employment_status
     *
     * @return self
     */
    public function setEmploymentStatus($employment_status)
    {
        $this->container['employment_status'] = $employment_status;

        return $this;
    }

    /**
     * Gets employment_role
     *
     * @return \Apideck\Client\Model\EmployeeEmploymentRole|null
     */
    public function getEmploymentRole()
    {
        return $this->container['employment_role'];
    }

    /**
     * Sets employment_role
     *
     * @param \Apideck\Client\Model\EmployeeEmploymentRole|null $employment_role employment_role
     *
     * @return self
     */
    public function setEmploymentRole($employment_role)
    {
        $this->container['employment_role'] = $employment_role;

        return $this;
    }

    /**
     * Gets ethnicity
     *
     * @return string|null
     */
    public function getEthnicity()
    {
        return $this->container['ethnicity'];
    }

    /**
     * Sets ethnicity
     *
     * @param string|null $ethnicity The ethnicity of the employee
     *
     * @return self
     */
    public function setEthnicity($ethnicity)
    {
        $this->container['ethnicity'] = $ethnicity;

        return $this;
    }

    /**
     * Gets manager
     *
     * @return \Apideck\Client\Model\EmployeeManager|null
     */
    public function getManager()
    {
        return $this->container['manager'];
    }

    /**
     * Sets manager
     *
     * @param \Apideck\Client\Model\EmployeeManager|null $manager manager
     *
     * @return self
     */
    public function setManager($manager)
    {
        $this->container['manager'] = $manager;

        return $this;
    }

    /**
     * Gets direct_reports
     *
     * @return string[]|null
     */
    public function getDirectReports()
    {
        return $this->container['direct_reports'];
    }

    /**
     * Sets direct_reports
     *
     * @param string[]|null $direct_reports Direct reports is an array of ids that reflect the individuals in an organizational hierarchy who are directly supervised by this specific employee.
     *
     * @return self
     */
    public function setDirectReports($direct_reports)
    {
        $this->container['direct_reports'] = $direct_reports;

        return $this;
    }

    /**
     * Gets social_security_number
     *
     * @return string|null
     */
    public function getSocialSecurityNumber()
    {
        return $this->container['social_security_number'];
    }

    /**
     * Sets social_security_number
     *
     * @param string|null $social_security_number A unique identifier assigned by the government. This field is considered sensitive information and may be subject to special security and privacy restrictions.
     *
     * @return self
     */
    public function setSocialSecurityNumber($social_security_number)
    {
        $this->container['social_security_number'] = $social_security_number;

        return $this;
    }

    /**
     * Gets birthday
     *
     * @return \DateTime|null
     */
    public function getBirthday()
    {
        return $this->container['birthday'];
    }

    /**
     * Sets birthday
     *
     * @param \DateTime|null $birthday The date of birth of the person.
     *
     * @return self
     */
    public function setBirthday($birthday)
    {
        $this->container['birthday'] = $birthday;

        return $this;
    }

    /**
     * Gets deceased_on
     *
     * @return \DateTime|null
     */
    public function getDeceasedOn()
    {
        return $this->container['deceased_on'];
    }

    /**
     * Sets deceased_on
     *
     * @param \DateTime|null $deceased_on The date the person deceased.
     *
     * @return self
     */
    public function setDeceasedOn($deceased_on)
    {
        $this->container['deceased_on'] = $deceased_on;

        return $this;
    }

    /**
     * Gets country_of_birth
     *
     * @return string|null
     */
    public function getCountryOfBirth()
    {
        return $this->container['country_of_birth'];
    }

    /**
     * Sets country_of_birth
     *
     * @param string|null $country_of_birth Country code according to ISO 3166-1 alpha-2.
     *
     * @return self
     */
    public function setCountryOfBirth($country_of_birth)
    {
        if (!is_null($country_of_birth) && (mb_strlen($country_of_birth) > 2)) {
            throw new \InvalidArgumentException('invalid length for $country_of_birth when calling Employee., must be smaller than or equal to 2.');
        }
        if (!is_null($country_of_birth) && (mb_strlen($country_of_birth) < 2)) {
            throw new \InvalidArgumentException('invalid length for $country_of_birth when calling Employee., must be bigger than or equal to 2.');
        }

        $this->container['country_of_birth'] = $country_of_birth;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description A description of the object.
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return \Apideck\Client\Model\Gender|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param \Apideck\Client\Model\Gender|null $gender gender
     *
     * @return self
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets pronouns
     *
     * @return string|null
     */
    public function getPronouns()
    {
        return $this->container['pronouns'];
    }

    /**
     * Sets pronouns
     *
     * @param string|null $pronouns The preferred pronouns of the person.
     *
     * @return self
     */
    public function setPronouns($pronouns)
    {
        $this->container['pronouns'] = $pronouns;

        return $this;
    }

    /**
     * Gets preferred_language
     *
     * @return string|null
     */
    public function getPreferredLanguage()
    {
        return $this->container['preferred_language'];
    }

    /**
     * Sets preferred_language
     *
     * @param string|null $preferred_language language code according to ISO 639-1. For the United States - EN
     *
     * @return self
     */
    public function setPreferredLanguage($preferred_language)
    {
        $this->container['preferred_language'] = $preferred_language;

        return $this;
    }

    /**
     * Gets languages
     *
     * @return string[]|null
     */
    public function getLanguages()
    {
        return $this->container['languages'];
    }

    /**
     * Sets languages
     *
     * @param string[]|null $languages languages
     *
     * @return self
     */
    public function setLanguages($languages)
    {
        $this->container['languages'] = $languages;

        return $this;
    }

    /**
     * Gets nationalities
     *
     * @return string[]|null
     */
    public function getNationalities()
    {
        return $this->container['nationalities'];
    }

    /**
     * Sets nationalities
     *
     * @param string[]|null $nationalities nationalities
     *
     * @return self
     */
    public function setNationalities($nationalities)
    {
        $this->container['nationalities'] = $nationalities;

        return $this;
    }

    /**
     * Gets photo_url
     *
     * @return string|null
     */
    public function getPhotoUrl()
    {
        return $this->container['photo_url'];
    }

    /**
     * Sets photo_url
     *
     * @param string|null $photo_url The URL of the photo of a person.
     *
     * @return self
     */
    public function setPhotoUrl($photo_url)
    {
        $this->container['photo_url'] = $photo_url;

        return $this;
    }

    /**
     * Gets timezone
     *
     * @return string|null
     */
    public function getTimezone()
    {
        return $this->container['timezone'];
    }

    /**
     * Sets timezone
     *
     * @param string|null $timezone The time zone related to the resource. The value is a string containing a standard time zone identifier, e.g. Europe/London.
     *
     * @return self
     */
    public function setTimezone($timezone)
    {
        $this->container['timezone'] = $timezone;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string|null
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string|null $source When the employee is imported as a new hire, this field indicates what system (e.g. the name of the ATS) this employee was imported from.
     *
     * @return self
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets source_id
     *
     * @return string|null
     */
    public function getSourceId()
    {
        return $this->container['source_id'];
    }

    /**
     * Sets source_id
     *
     * @param string|null $source_id Unique identifier of the employee in the system this employee was imported from (e.g. the ID in the ATS).
     *
     * @return self
     */
    public function setSourceId($source_id)
    {
        $this->container['source_id'] = $source_id;

        return $this;
    }

    /**
     * Gets record_url
     *
     * @return string|null
     */
    public function getRecordUrl()
    {
        return $this->container['record_url'];
    }

    /**
     * Sets record_url
     *
     * @param string|null $record_url record_url
     *
     * @return self
     */
    public function setRecordUrl($record_url)
    {
        $this->container['record_url'] = $record_url;

        return $this;
    }

    /**
     * Gets jobs
     *
     * @return \Apideck\Client\Model\EmployeeJob[]|null
     */
    public function getJobs()
    {
        return $this->container['jobs'];
    }

    /**
     * Sets jobs
     *
     * @param \Apideck\Client\Model\EmployeeJob[]|null $jobs jobs
     *
     * @return self
     */
    public function setJobs($jobs)
    {
        $this->container['jobs'] = $jobs;

        return $this;
    }

    /**
     * Gets compensations
     *
     * @return \Apideck\Client\Model\EmployeeCompensation[]|null
     */
    public function getCompensations()
    {
        return $this->container['compensations'];
    }

    /**
     * Sets compensations
     *
     * @param \Apideck\Client\Model\EmployeeCompensation[]|null $compensations compensations
     *
     * @return self
     */
    public function setCompensations($compensations)
    {
        $this->container['compensations'] = $compensations;

        return $this;
    }

    /**
     * Gets works_remote
     *
     * @return bool|null
     */
    public function getWorksRemote()
    {
        return $this->container['works_remote'];
    }

    /**
     * Sets works_remote
     *
     * @param bool|null $works_remote Indicates if the employee works from a remote location.
     *
     * @return self
     */
    public function setWorksRemote($works_remote)
    {
        $this->container['works_remote'] = $works_remote;

        return $this;
    }

    /**
     * Gets addresses
     *
     * @return \Apideck\Client\Model\Address[]|null
     */
    public function getAddresses()
    {
        return $this->container['addresses'];
    }

    /**
     * Sets addresses
     *
     * @param \Apideck\Client\Model\Address[]|null $addresses addresses
     *
     * @return self
     */
    public function setAddresses($addresses)
    {
        $this->container['addresses'] = $addresses;

        return $this;
    }

    /**
     * Gets phone_numbers
     *
     * @return \Apideck\Client\Model\PhoneNumber[]|null
     */
    public function getPhoneNumbers()
    {
        return $this->container['phone_numbers'];
    }

    /**
     * Sets phone_numbers
     *
     * @param \Apideck\Client\Model\PhoneNumber[]|null $phone_numbers phone_numbers
     *
     * @return self
     */
    public function setPhoneNumbers($phone_numbers)
    {
        $this->container['phone_numbers'] = $phone_numbers;

        return $this;
    }

    /**
     * Gets emails
     *
     * @return \Apideck\Client\Model\Email[]|null
     */
    public function getEmails()
    {
        return $this->container['emails'];
    }

    /**
     * Sets emails
     *
     * @param \Apideck\Client\Model\Email[]|null $emails emails
     *
     * @return self
     */
    public function setEmails($emails)
    {
        $this->container['emails'] = $emails;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return \Apideck\Client\Model\CustomField[]|null
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param \Apideck\Client\Model\CustomField[]|null $custom_fields custom_fields
     *
     * @return self
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets social_links
     *
     * @return \Apideck\Client\Model\SocialLink[]|null
     */
    public function getSocialLinks()
    {
        return $this->container['social_links'];
    }

    /**
     * Sets social_links
     *
     * @param \Apideck\Client\Model\SocialLink[]|null $social_links social_links
     *
     * @return self
     */
    public function setSocialLinks($social_links)
    {
        $this->container['social_links'] = $social_links;

        return $this;
    }

    /**
     * Gets bank_accounts
     *
     * @return \Apideck\Client\Model\BankAccount[]|null
     */
    public function getBankAccounts()
    {
        return $this->container['bank_accounts'];
    }

    /**
     * Sets bank_accounts
     *
     * @param \Apideck\Client\Model\BankAccount[]|null $bank_accounts bank_accounts
     *
     * @return self
     */
    public function setBankAccounts($bank_accounts)
    {
        $this->container['bank_accounts'] = $bank_accounts;

        return $this;
    }

    /**
     * Gets tax_code
     *
     * @return string|null
     */
    public function getTaxCode()
    {
        return $this->container['tax_code'];
    }

    /**
     * Sets tax_code
     *
     * @param string|null $tax_code tax_code
     *
     * @return self
     */
    public function setTaxCode($tax_code)
    {
        $this->container['tax_code'] = $tax_code;

        return $this;
    }

    /**
     * Gets tax_id
     *
     * @return string|null
     */
    public function getTaxId()
    {
        return $this->container['tax_id'];
    }

    /**
     * Sets tax_id
     *
     * @param string|null $tax_id tax_id
     *
     * @return self
     */
    public function setTaxId($tax_id)
    {
        $this->container['tax_id'] = $tax_id;

        return $this;
    }

    /**
     * Gets dietary_preference
     *
     * @return string|null
     */
    public function getDietaryPreference()
    {
        return $this->container['dietary_preference'];
    }

    /**
     * Sets dietary_preference
     *
     * @param string|null $dietary_preference Indicate the employee's dietary preference.
     *
     * @return self
     */
    public function setDietaryPreference($dietary_preference)
    {
        $this->container['dietary_preference'] = $dietary_preference;

        return $this;
    }

    /**
     * Gets food_allergies
     *
     * @return string[]|null
     */
    public function getFoodAllergies()
    {
        return $this->container['food_allergies'];
    }

    /**
     * Sets food_allergies
     *
     * @param string[]|null $food_allergies Indicate the employee's food allergies.
     *
     * @return self
     */
    public function setFoodAllergies($food_allergies)
    {
        $this->container['food_allergies'] = $food_allergies;

        return $this;
    }

    /**
     * Gets probation_period
     *
     * @return \Apideck\Client\Model\ProbationPeriod|null
     */
    public function getProbationPeriod()
    {
        return $this->container['probation_period'];
    }

    /**
     * Sets probation_period
     *
     * @param \Apideck\Client\Model\ProbationPeriod|null $probation_period probation_period
     *
     * @return self
     */
    public function setProbationPeriod($probation_period)
    {
        $this->container['probation_period'] = $probation_period;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return string[]|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param string[]|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets custom_mappings
     *
     * @return object|null
     */
    public function getCustomMappings()
    {
        return $this->container['custom_mappings'];
    }

    /**
     * Sets custom_mappings
     *
     * @param object|null $custom_mappings When custom mappings are configured on the resource, the result is included here.
     *
     * @return self
     */
    public function setCustomMappings($custom_mappings)
    {
        $this->container['custom_mappings'] = $custom_mappings;

        return $this;
    }

    /**
     * Gets row_version
     *
     * @return string|null
     */
    public function getRowVersion()
    {
        return $this->container['row_version'];
    }

    /**
     * Sets row_version
     *
     * @param string|null $row_version A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     *
     * @return self
     */
    public function setRowVersion($row_version)
    {
        $this->container['row_version'] = $row_version;

        return $this;
    }

    /**
     * Gets deleted
     *
     * @return bool|null
     */
    public function getDeleted()
    {
        return $this->container['deleted'];
    }

    /**
     * Sets deleted
     *
     * @param bool|null $deleted Flag to indicate if the object is deleted.
     *
     * @return self
     */
    public function setDeleted($deleted)
    {
        $this->container['deleted'] = $deleted;

        return $this;
    }

    /**
     * Gets updated_by
     *
     * @return string|null
     */
    public function getUpdatedBy()
    {
        return $this->container['updated_by'];
    }

    /**
     * Sets updated_by
     *
     * @param string|null $updated_by The user who last updated the object.
     *
     * @return self
     */
    public function setUpdatedBy($updated_by)
    {
        $this->container['updated_by'] = $updated_by;

        return $this;
    }

    /**
     * Gets created_by
     *
     * @return string|null
     */
    public function getCreatedBy()
    {
        return $this->container['created_by'];
    }

    /**
     * Sets created_by
     *
     * @param string|null $created_by The user who created the object.
     *
     * @return self
     */
    public function setCreatedBy($created_by)
    {
        $this->container['created_by'] = $created_by;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime|null $updated_at The date and time when the object was last updated.
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime|null $created_at The date and time when the object was created.
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


